generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  first_name     String
  last_name      String
  email          String        @unique
  phone          String        @unique
  password       String
  quotation_code String?
  department     Department
  recipient_list Recipient[]
  asignee        Asignee[]
  description    Description[]
  deal           Deal[]
  drawing        Drawing[]
}

model Company {
  id             Int      @id @default(autoincrement())
  name           String
  address        String
  gst_no         String?
  created_at     DateTime @default(now())
  client_details Client[]
  lead           Lead[]
  deal           Deal[]
}

model Lead {
  id            Int            @id @default(autoincrement())
  created_at    DateTime       @default(now())
  description   Description[]
  company_id    Int
  client_id     Int
  source_id     Int
  product_id    Int
  is_converted  Boolean        @default(false)
  assigned_to   Asignee[]
  notification  Notification[]
  deal          Deal[]
  company       Company        @relation(fields: [company_id], references: [id])
  client_detail Client         @relation(fields: [client_id], references: [id])
  source        Source         @relation(fields: [source_id], references: [id])
  product       Product        @relation(fields: [product_id], references: [id])
}

model Description {
  id           Int            @id @default(autoincrement())
  lead         Lead?          @relation(fields: [lead_id], references: [id])
  lead_id      Int?
  created_at   DateTime       @default(now())
  updated_at   DateTime?      @updatedAt
  notes        String
  user         User           @relation(fields: [updated_by], references: [id])
  updated_by   Int
  notification Notification[]
  deal         Deal?          @relation(fields: [deal_id], references: [id])
  deal_id      String?
}

model Source {
  id   Int    @id @default(autoincrement())
  name String
  lead Lead[]
  deal Deal[]
}

model Product {
  id   Int    @id @default(autoincrement())
  name String
  lead Lead[]
  deal Deal[]
}

model Asignee {
  id      Int     @id @default(autoincrement())
  lead    Lead?   @relation(fields: [lead_id], references: [id])
  lead_id Int?
  user    User    @relation(fields: [user_id], references: [id])
  user_id Int
  deal    Deal?   @relation(fields: [deal_id], references: [id])
  deal_id String?
}

model Client {
  id         Int     @id @default(autoincrement())
  first_name String
  last_name  String
  company    Company @relation(fields: [company_id], references: [id])
  company_id Int
  lead       Lead[]
  emails     Email[]
  phones     Phone[]
  deal       Deal[]
}

model Email {
  id        Int     @id @default(autoincrement())
  email     String?
  client    Client  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  client_id Int
}

model Phone {
  id        Int    @id @default(autoincrement())
  phone     String
  client    Client @relation(fields: [client_id], references: [id], onDelete: Cascade)
  client_id Int
}

model Notification {
  id             Int               @id @default(autoincrement())
  message        String?
  title          String
  created_at     DateTime          @default(now())
  send_at        DateTime?
  is_sent        Boolean           @default(false)
  type           Notification_Type
  recipient_list Recipient[]
  lead           Lead?             @relation(fields: [lead_id], references: [id])
  lead_id        Int?
  deal           Deal?             @relation(fields: [deal_id], references: [id])
  deal_id        String?
  description    Description?      @relation(fields: [description_id], references: [id], onDelete: Cascade)
  description_id Int?
}

model Recipient {
  id              Int          @id @default(autoincrement())
  is_read         Boolean      @default(false)
  read_at         DateTime?
  notification_id Int
  user_id         Int
  is_ready        Boolean      @default(false)
  ready_at        DateTime?
  notification    Notification @relation(fields: [notification_id], references: [id], onDelete: Cascade)
  user            User         @relation(fields: [user_id], references: [id])
}

model Deal {
  id            String         @id
  deal_status   Deal_Status
  created_at    DateTime       @default(now())
  last_updated  DateTime       @updatedAt
  assigned_to   Asignee[]
  company_id    Int
  notification  Notification[]
  company       Company        @relation(fields: [company_id], references: [id])
  drawing       Drawing[]
  quotation     Quotation[]
  description   Description[]
  client_detail Client         @relation(fields: [client_id], references: [id])
  client_id     Int
  source        Source         @relation(fields: [source_id], references: [id])
  source_id     Int
  product       Product        @relation(fields: [product_id], references: [id])
  product_id    Int
  lead          Lead?          @relation(fields: [lead_id], references: [id])
  lead_id       Int?
  user          User           @relation(fields: [updated_by], references: [id])
  updated_by    Int
}

model Drawing {
  id          Int            @id @default(autoincrement())
  drawing_url String         @unique
  title       String
  version     String
  file_type   String
  file_size   Int
  status      Drawing_Status @default(pending)
  uploaded_at DateTime       @default(now())
  approved_at DateTime?
  note        String?
  deal_id     String
  deal        Deal           @relation(fields: [deal_id], references: [id])
  user        User           @relation(fields: [uploaded_by], references: [id])
  uploaded_by Int
}

model Quotation {
  id                 Int                @id @default(autoincrement())
  created_at         DateTime           @default(now())
  deal_id            String
  subject            String
  quotation_template Quotation_Template
  gst                Decimal            @default(0)
  discount           Decimal            @default(0)
  round_off          Decimal            @default(0)
  sub_total       Decimal            @default(0)
  grand_total Decimal @default(0)
  deal               Deal               @relation(fields: [deal_id], references: [id])
  order              Order[]
  items              QuotationItem[]
  working            QuotationWorking[]
}

model QuotationItem {
  id           Int       @id @default(autoincrement())
  quotation_id Int
  item_name    String
  item_code    String?
  height       Int
  width        Int
  depth        Int
  provided_rate       Decimal @default(0)
  market_rate         Decimal @default(0)
  quantity     Int
  quotation    Quotation @relation(fields: [quotation_id], references: [id])
}

model QuotationWorking {
  id                  Int     @id @default(autoincrement())
  quotation_id        Int     @unique
  total_weight        Decimal @default(0)
  sheet_material      Decimal @default(0)
  trolley_material    Decimal @default(0)
  powder_coating      Decimal @default(0)
  labour_cost         Decimal @default(0)
  installation        Decimal @default(0)
  transport           Decimal @default(0)
  accomodation        Decimal @default(0)
  provided_total_cost Decimal @default(0)
  market_total_cost   Decimal @default(0)
  total_body Int 
  metal_rate Decimal @default(0)
  quotation Quotation @relation(fields: [quotation_id], references: [id])
}

model BaseProduct {
  id             Int     @id @default(autoincrement())
  product_type Product_Type
  name           String
  code           String?
  default_height Int @default(0)
  default_width Int @default(0)
  default_depth  Int @default(0)
  per_bay_qty    Int
  compartment    Int
}

model Order {
  id           Int       @id @default(autoincrement())
  order_number String    @unique
  created_at   DateTime  @default(now())
  po_number    String?
  pi_number    String?
  colour       String
  balance      Int
  height       Int
  total_body   Int
  quotation_id Int
  quotation    Quotation @relation(fields: [quotation_id], references: [id])
  advance      Advance[]
}

model Advance {
  id             Int      @id @default(autoincrement())
  advance_amount Int
  advance_date   DateTime
  order_id       Int
  order          Order    @relation(fields: [order_id], references: [id])
}

enum Notification_Type {
  color_changed
  drawing_uploaded
  drawing_approved
  drawing_rejected
  client_meeting
  mentioned
  lead_assigned
}

enum Quotation_Template {
  set_wise
  item_wise
}

enum Product_Type {
  compactor
  locker
}

enum Deal_Status {
  pending
  drawing
  quotation
  high_order_value
  negotiation
  order_lost
  order_confirmed
}

enum Drawing_Status {
  pending
  approved
  rejected
}

enum Department {
  sales
  admin
  factory
  drawing
}
