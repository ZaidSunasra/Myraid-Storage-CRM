generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  first_name     String
  last_name      String
  email          String      @unique
  phone          String      @unique
  password       String
  quotation_code String?
  department     Department
  leads          Lead[]
  deal           Deal[]
  recipient_list Recipient[]
}

model Company {
  id             Int         @id @default(autoincrement())
  name           String
  address        String
  gst_no         String?
  created_at     DateTime    @default(now())
  client_details Client[]
  lead           Lead[]
  deal           Deal[]
  quotation      Quotation[]
}

model Lead {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now())
  description   String?
  company_id    Int
  client_id     Int
  assigned_to   Int
  source        Source
  product       String
  company       Company  @relation(fields: [company_id], references: [id])
  user          User     @relation(fields: [assigned_to], references: [id])
  client_detail Client   @relation(fields: [client_id], references: [id])
}

model Client {
  id         Int     @id @default(autoincrement())
  first_name String
  last_name  String
  company    Company @relation(fields: [company_id], references: [id])
  company_id Int
  lead       Lead[]
  email      Email[]
  phone      Phone[]
}

model Email {
  id       Int     @id @default(autoincrement())
  email    String?
  client   Client @relation(fields: [client_id], references: [id])
  client_id Int
}

model Phone {
  id       Int     @id @default(autoincrement())
  phone    String
  client   Client @relation(fields: [client_id], references: [id])
  client_id Int
}

model Notification {
  id             Int               @id @default(autoincrement())
  message        String?
  title          String
  created_at     DateTime          @default(now())
  send_at        DateTime?
  is_sent        Boolean           @default(false)
  related_id     Int?
  type           Notification_Type
  related_type   Related_Type?
  recipient_list Recipient[]
}

model Recipient {
  id              Int          @id @default(autoincrement())
  is_read         Boolean      @default(false)
  read_at         DateTime?
  notification_id Int
  user_id         Int
  notification    Notification @relation(fields: [notification_id], references: [id])
  user            User         @relation(fields: [user_id], references: [id])
}

model Deal {
  id           Int         @id @default(autoincrement())
  deal_status  Deal_Status
  created_at   DateTime    @default(now())
  last_updated DateTime    @updatedAt
  assigned_to  Int
  company_id   Int
  company      Company     @relation(fields: [company_id], references: [id])
  user         User        @relation(fields: [assigned_to], references: [id])
  drawing      Drawing[]
  quotation    Quotation[]
}

model Drawing {
  id          Int       @id @default(autoincrement())
  drawing_url String    @unique
  title       String
  version     String
  approved    Boolean   @default(false)
  uploaded_at DateTime
  approved_at DateTime?
  locked      Boolean   @default(false)
  deal_id     Int
  deal        Deal      @relation(fields: [deal_id], references: [id])
}

model Quotation {
  id                 Int                @id @default(autoincrement())
  created_at         DateTime           @default(now())
  company_id         Int
  deal_id            Int
  quotation_template Quotation_Template
  deal               Deal               @relation(fields: [deal_id], references: [id])
  company            Company            @relation(fields: [company_id], references: [id])
  order              Order[]
  items              QuotationItem[]
}

model QuotationItem {
  id           Int       @id @default(autoincrement())
  quotation_id Int
  item_name    String
  rate         Decimal
  quantity     Decimal
  quotation    Quotation @relation(fields: [quotation_id], references: [id])
}

model Order {
  id           Int       @id @default(autoincrement())
  order_number String    @unique
  created_at   DateTime  @default(now())
  po_number    String?
  pi_number    String?
  colour       String
  balance      Int
  height       Int
  total_body   Int
  quotation_id Int
  quotation    Quotation @relation(fields: [quotation_id], references: [id])
  advance      Advance[]
}

model Advance {
  id             Int      @id @default(autoincrement())
  advance_amount Int
  advance_date   DateTime
  order_id       Int
  order          Order    @relation(fields: [order_id], references: [id])
}

enum Related_Type {
  lead
  deal
  order
}

enum Notification_Type {
  color_changed
  drawing_uploaded
  drawing_approved
  drawing_rejected
  client_meeting
}

enum Quotation_Template {
  A
  B
  C
  D
}

enum Deal_Status {
  drawing
  quotation
  high_order_value
  negotiation
  order_lost
  order_confirmed
}

enum Source {
  india_mart
  google_ads
}

enum Department {
  sales
  admin
  factory
  drawing
}
